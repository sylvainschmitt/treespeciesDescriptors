[["index.html", "tree species descriptors Descriptors of the environment and performance of tropical tree species in Paracou. Preface", " tree species descriptors Descriptors of the environment and performance of tropical tree species in Paracou. Sylvain Schmitt 2023-04-27 Preface Repository to develop descriptors of the environment and performance of tropical tree species in Paracou for the Camille and Sebastien analyses. Sylvain "],["introduction.html", "Introduction 0.1 Species 0.2 Individuals", " Introduction Repository to develop descriptors of the environment and performance of tropical tree species in Paracou for the Camille and Sebastien analyses. 0.1 Species species &lt;- readxl::read_xlsx(&quot;data/Species_list.xlsx&quot;) kable(species, caption = &quot;Studied species&quot;) Table 0.1: Studied species Species Bocoa prouacensis Chaetocarpus schomburgkianus Chrysophyllum sanguinolentum Dicorynia guianensis Eperua falcata Eperua grandiflora Eschweilera sagotiana Goupia glabra Gustavia hexapetala Lecythis persistens subsp. aurantiaca Lecythis poiteaui Licania membranacea Manilkara bidentata Pradosia cochlearia Protium opacum subsp. rabelianum Qualea rosea Symphonia sp.1 Tachigali melinonii Virola michelii 0.2 Individuals guyafor &lt;- DBI::dbConnect(RSQLite::SQLite(), dbname = &quot;data/guyafor.sql&quot;) trees &lt;- tbl(guyafor, &quot;inventory&quot;) %&gt;% filter(Forest == &quot;Paracou&quot;) %&gt;% filter(paste(Genus, Species) %in% local(species$Species)) %&gt;% collect() %&gt;% mutate(DBH = CircCorr/pi) DBI::dbDisconnect(guyafor) ; rm(guyafor) vroom::vroom_write(trees, &quot;data/paracou.tsv&quot;) vroom::vroom(&quot;data/paracou.tsv&quot;, show_col_types = F) %&gt;% group_by(Genus, Species) %&gt;% summarise(N = n()) %&gt;% kable(caption = &quot;Number of individuals per species&quot;) Table 0.2: Number of individuals per species Genus Species N Bocoa prouacensis 30561 Chaetocarpus schomburgkianus 8729 Chrysophyllum sanguinolentum 5517 Dicorynia guianensis 16815 Eperua falcata 64077 Eperua grandiflora 18242 Eschweilera sagotiana 82706 Goupia glabra 17900 Gustavia hexapetala 17907 Lecythis persistens subsp. aurantiaca 97172 Lecythis poiteaui 7531 Licania membranacea 19342 Manilkara bidentata 3653 Pradosia cochlearia 19912 Protium opacum subsp. rabelianum 11484 Qualea rosea 17446 Symphonia sp.1 15860 Tachigali melinonii 4433 Virola michelii 7415 "],["environmental-descriptors.html", "Chapter 1 Environmental descriptors 1.1 TWI: Topographic Wetness Index 1.2 HAND: Height Above Nearest Drainage 1.3 Hydromorphy 1.4 Water logging 1.5 Water table depth 1.6 Drainage type 1.7 Correlations 1.8 Species data", " Chapter 1 Environmental descriptors # data paracou &lt;- vroom::vroom(&quot;data/paracou.tsv&quot;) %&gt;% filter(CensusYear == 2019) paracouXY &lt;- paracou %&gt;% filter(!is.na(Xutm), !is.na(Yutm)) %&gt;% st_as_sf(coords = c(&quot;Xutm&quot;, &quot;Yutm&quot;), crs = &#39;+proj=utm +zone=22 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0&#39;) # rasters paracouXY$TWI &lt;- raster::extract(raster::raster(&quot;data/TWI_1m.tif&quot;), paracouXY) paracouXY &lt;- mutate(paracouXY, TWI = ifelse(TWI &lt; 0, 0, TWI)) paracouXY$HAND &lt;- raster::extract(raster::raster(&quot;data/RelativeElevation_1m.tif&quot;), paracouXY) paracou &lt;- paracou %&gt;% left_join(select(paracouXY, idTree, TWI, HAND) %&gt;% st_drop_geometry()) # shapefiles readshp &lt;- function(path){ shp &lt;- st_read(path, crs = &#39;+proj=utm +zone=22 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0&#39;) shp$geometry &lt;- lwgeom::lwgeom_make_valid(st_as_sfc(shp)) return(shp) } paracou &lt;- paracou %&gt;% left_join(st_intersection(readshp(&quot;data/Hydromorphy/Hydromorphy.shp&quot;), paracouXY) %&gt;% st_drop_geometry() %&gt;% select(idTree, Hydro)) %&gt;% left_join(st_intersection(readshp(&quot;data/WaterLogging/Waterlogging.shp&quot;), paracouXY) %&gt;% st_drop_geometry() %&gt;% select(idTree, LevelWater)) %&gt;% left_join(st_intersection(readshp(&quot;data/WaterTable/WaterTable.shp&quot;), paracouXY) %&gt;% st_drop_geometry() %&gt;% select(idTree, TypeWatEN)) %&gt;% left_join(st_intersection(readshp(&quot;data/Drainages/Drainages.shp&quot;), paracouXY) %&gt;% st_drop_geometry() %&gt;% select(idTree, TypDrainEN)) # save vroom::vroom_write(paracou, &quot;data/paracou_env.tsv&quot;) 1.1 TWI: Topographic Wetness Index vroom::vroom(&quot;data/paracou_env.tsv&quot;) %&gt;% mutate(species = paste(Genus, Species)) %&gt;% group_by(Species) %&gt;% ggplot(aes(x = species, y = log(TWI+1))) + geom_boxplot() + coord_flip() 1.2 HAND: Height Above Nearest Drainage vroom::vroom(&quot;data/paracou_env.tsv&quot;) %&gt;% mutate(species = paste(Genus, Species)) %&gt;% ggplot(aes(x = species, y = log(HAND+1))) + geom_boxplot() + coord_flip() 1.3 Hydromorphy vroom::vroom(&quot;data/paracou_env.tsv&quot;) %&gt;% mutate(species = paste(Genus, Species)) %&gt;% filter(!is.na(Hydro)) %&gt;% ggplot(aes(x = species, fill = as.factor(Hydro))) + geom_bar(position = &quot;dodge&quot;) + coord_flip() + scale_fill_discrete(&quot;Hydromorphy&quot;) 1.4 Water logging vroom::vroom(&quot;data/paracou_env.tsv&quot;) %&gt;% mutate(species = paste(Genus, Species)) %&gt;% filter(!is.na(LevelWater)) %&gt;% ggplot(aes(x = species, fill = as.factor(LevelWater))) + geom_bar(position = &quot;dodge&quot;) + coord_flip() + scale_fill_discrete(&quot;Water\\nlogging&quot;) 1.5 Water table depth vroom::vroom(&quot;data/paracou_env.tsv&quot;) %&gt;% mutate(species = paste(Genus, Species)) %&gt;% filter(!is.na(TypeWatEN)) %&gt;% ggplot(aes(x = species, fill = as.factor(TypeWatEN))) + geom_bar(position = &quot;dodge&quot;) + coord_flip() + scale_fill_discrete(&quot;&quot;) + guides(fill=guide_legend(nrow=3)) + theme(legend.position = &quot;bottom&quot;) 1.6 Drainage type vroom::vroom(&quot;data/paracou_env.tsv&quot;) %&gt;% mutate(species = paste(Genus, Species)) %&gt;% filter(!is.na(TypDrainEN)) %&gt;% ggplot(aes(x = species, fill = as.factor(TypDrainEN))) + geom_bar(position = &quot;dodge&quot;) + coord_flip() + scale_fill_discrete(&quot;Drainage&quot;) 1.7 Correlations vroom::vroom(&quot;data/paracou_env.tsv&quot;) %&gt;% mutate(TWI = log(TWI+1), HAND = log(HAND + 1)) %&gt;% select(TWI, HAND, Hydro, LevelWater, TypeWatEN, TypDrainEN) %&gt;% na.omit() %&gt;% fastDummies::dummy_cols(c(&quot;Hydro&quot;, &quot;LevelWater&quot;, &quot;TypeWatEN&quot;, &quot;TypDrainEN&quot;), remove_selected_columns = T) %&gt;% cor() %&gt;% corrplot::corrplot(type = &quot;lower&quot;, method = &quot;number&quot;, tl.cex = 0.8) 1.8 Species data vroom::vroom(&quot;data/paracou_env.tsv&quot;) %&gt;% group_by(Genus, Species) %&gt;% summarise(TWI = mean(log(TWI+1), na.omit = T), HAND = mean(log(HAND+1), na.omit = T)) %&gt;% vroom::vroom_write(&quot;data/species_env&quot;) vroom::vroom(&quot;data/species_env&quot;) %&gt;% kable(caption = &quot;Envrionmental descriptor per species.&quot;) Table 1.1: Envrionmental descriptor per species. Genus Species TWI HAND Bocoa prouacensis 1.0074364 2.534184 Chaetocarpus schomburgkianus 1.0041621 2.436889 Chrysophyllum sanguinolentum 0.9747982 2.349842 Dicorynia guianensis 1.0407330 2.322856 Eperua falcata 1.0413672 1.961921 Eperua grandiflora 1.0209313 2.494235 Eschweilera sagotiana 1.0209671 2.319500 Goupia glabra 1.0981859 2.047156 Gustavia hexapetala 1.0390552 2.047410 Lecythis persistens subsp. aurantiaca 1.0800652 1.938543 Lecythis poiteaui 1.0322048 2.459923 Licania membranacea 1.0151932 2.361690 Manilkara bidentata 1.0435142 2.201363 Pradosia cochlearia 1.0235659 2.479418 Protium opacum subsp. rabelianum 1.1730619 1.678871 Qualea rosea 0.9806979 2.368900 Symphonia sp.1 1.0073779 2.301381 Tachigali melinonii 1.0869784 2.099428 Virola michelii 1.0273040 2.403253 "],["performance-descriptors.html", "Chapter 2 Performance descriptors 2.1 Growth 2.2 Mortality", " Chapter 2 Performance descriptors 2.1 Growth vroom::vroom(&quot;data/paracou.tsv&quot;) %&gt;% filter(BotaSource == &quot;Bota&quot;) %&gt;% group_by(Genus, Species, idTree) %&gt;% arrange(CensusYear) %&gt;% mutate(FirstDead = first(CensusYear[CodeAlive == 0])) %&gt;% mutate(FirstDead = ifelse(is.na(FirstDead), max(CensusYear)+1, FirstDead)) %&gt;% filter(CensusYear &lt; FirstDead) %&gt;% summarise(AGR = (last(DBH) - first(DBH))/(last(CensusYear) - first(CensusYear))) %&gt;% na.omit() %&gt;% group_by(Genus, Species) %&gt;% summarise(AGR = median(AGR)) %&gt;% vroom::vroom_write(&quot;data/species_growth.tsv&quot;) vroom::vroom(&quot;data/species_growth.tsv&quot;) %&gt;% kable(caption = &quot;Median of annual growth rate of all individuals across species (cm/year).&quot;) Table 2.1: Median of annual growth rate of all individuals across species (cm/year). Genus Species AGR Bocoa prouacensis 0.0574726 Chaetocarpus schomburgkianus 0.0972614 Chrysophyllum sanguinolentum 0.1591549 Dicorynia guianensis 0.2387324 Eperua falcata 0.1426906 Eperua grandiflora 0.3050470 Eschweilera sagotiana 0.0928404 Goupia glabra 0.1044454 Gustavia hexapetala 0.0454728 Lecythis persistens subsp. aurantiaca 0.0454728 Lecythis poiteaui 0.0603691 Licania membranacea 0.2180303 Manilkara bidentata 0.2350199 Pradosia cochlearia 0.1267751 Protium opacum subsp. rabelianum 0.2273642 Qualea rosea 0.3031178 Symphonia sp.1 0.2910262 Tachigali melinonii 0.7141031 Virola michelii 0.3023944 2.2 Mortality vroom::vroom(&quot;data/paracou.tsv&quot;) %&gt;% group_by(Genus, Species, idTree) %&gt;% summarise(death = ifelse(any(CodeAlive == 0), 1, 0), y_min = min(CensusYear), y_max = max(CensusYear)) %&gt;% group_by(Genus, Species) %&gt;% summarise(mortality = sum(death) / n() / (max(y_max) - min(y_min)) * 100) %&gt;% vroom::vroom_write(&quot;data/species_mortality.tsv&quot;) vroom::vroom(&quot;data/species_mortality.tsv&quot;) %&gt;% kable(caption = &quot;Annual mortality rate across species (%/year).&quot;) Table 2.2: Annual mortality rate across species (%/year). Genus Species mortality Bocoa prouacensis 0.7637079 Chaetocarpus schomburgkianus 0.3306836 Chrysophyllum sanguinolentum 0.9306827 Dicorynia guianensis 0.5329273 Eperua falcata 0.2835127 Eperua grandiflora 0.3125575 Eschweilera sagotiana 0.2043473 Goupia glabra 0.3581037 Gustavia hexapetala 0.3743356 Lecythis persistens subsp. aurantiaca 0.2827495 Lecythis poiteaui 0.2138829 Licania membranacea 0.4911947 Manilkara bidentata 0.6019656 Pradosia cochlearia 0.3309990 Protium opacum subsp. rabelianum 0.8718396 Qualea rosea 0.4662810 Symphonia sp.1 0.3944652 Tachigali melinonii 0.5140587 Virola michelii 0.4263192 "],["tests.html", "Chapter 3 Tests", " Chapter 3 Tests sp &lt;- vroom(&quot;data/camille/Corrplot_canopy_strategy_traits_raw_19sp.csv&quot;) %&gt;% select(Ptlp, P50leaf, P50stem, SSMleaf, SSMstem, SegP50, gmin, gbark, `Al:As`, SegLSC_leaf, Pmd_18, PLCleaf, PLCstem, Mortality) %&gt;% rename(SegLSC = SegLSC_leaf, Pmd = Pmd_18) ind &lt;- readxl::read_excel(&quot;data/camille/DATABASE_Canopy.xlsx&quot;, &quot;All_data_Ind&quot;) %&gt;% separate(&quot;Species...1&quot;, c(&quot;Genus&quot;, &quot;Species&quot;)) %&gt;% filter(!is.na(XUTM)) %&gt;% mutate(SSMleaf = Ptlp_wet - P50leaf, SSMstem = Ptlp_wet - P50stem) %&gt;% select(Genus, Species, Ptlp_wet, P50leaf, P50stem, SSMleaf, SSMstem, SegP50, gmin_leaf, gmin_bark, `Al:As`, SegLSC_leaf, Pmd_18, PLCleaf_18, PLCstem_18, Mortality) %&gt;% rename(Ptlp = Ptlp_wet, gmin = gmin_leaf, gbark = gmin_bark, SegLSC = SegLSC_leaf, Pmd = Pmd_18, PLCleaf = PLCleaf_18, PLCstem = PLCstem_18) indxy &lt;- readxl::read_excel(&quot;data/camille/DATABASE_Canopy.xlsx&quot;, &quot;All_data_Ind&quot;) %&gt;% filter(!is.na(XUTM)) %&gt;% st_as_sf(coords = c(&quot;XUTM&quot;, &quot;YUTM&quot;), crs = &#39;+proj=utm +zone=22 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0&#39;) ind$HAND &lt;- raster::extract(raster::raster(&quot;data/RelativeElevation_1m.tif&quot;), indxy) rm(indxy) agr &lt;- readxl::read_excel(&quot;data/camille/DATABASE_Canopy.xlsx&quot;, &quot;All_data_Ind&quot;) %&gt;% filter(!is.na(XUTM)) %&gt;% select(&quot;Species...1&quot;) %&gt;% separate(&quot;Species...1&quot;, c(&quot;Genus&quot;, &quot;Species&quot;)) %&gt;% left_join(vroom(&quot;data/species_growth.tsv&quot;)) ind$AGR &lt;- agr$AGR ind %&gt;% gather(variable, value, -Genus, -Species) %&gt;% na.omit() %&gt;% ggplot(aes(value)) + geom_histogram() + facet_wrap(~ variable, scales = &quot;free&quot;) + ggtitle(&quot;Distribution raw&quot;) ind %&gt;% gather(variable, value, -Genus, -Species) %&gt;% na.omit() %&gt;% ggplot(aes(log(abs(value)))) + geom_histogram() + facet_wrap(~ variable, scales = &quot;free&quot;) + ggtitle(&quot;Distribution log and abs transformed&quot;) g1 &lt;- ggplot(ind, aes(P50stem, P50leaf)) + geom_smooth(method = &quot;lm&quot;) + geom_abline(linetype = &quot;dashed&quot;) + geom_point() + ggpubr::stat_cor(aes(label = paste(..p.label..)), label.y.npc = 0.8) + ggpubr::stat_regline_equation(aes(label = paste(..adj.rr.label..))) + xlab(expression(P[50~stem]~(MPa))) + ylab(expression(P[50~leaf]~(MPa))) g2 &lt;- ggplot(ind, aes(gbark, gmin)) + geom_smooth(method = &quot;lm&quot;) + geom_abline(linetype = &quot;dashed&quot;) + geom_point() + ggpubr::stat_cor(aes(label = paste(..p.label..)), label.y.npc = 0.8) + ggpubr::stat_regline_equation(aes(label = paste(..adj.rr.label..))) + ylab(expression(g[min]~(mmol~m^{-2}~s^{-1}))) + ylim(0, 10) + xlab(expression(g[bark]~(mmol~m^{-2}~s^{-1}))) g3 &lt;- ggplot(ind, aes(P50stem, gbark)) + geom_point() + ggpubr::stat_cor(aes(label = paste(..p.label..)), label.y.npc = 0.8) + ggpubr::stat_regline_equation(aes(label = paste(..adj.rr.label..))) + xlab(expression(P[50~stem]~(MPa))) + ylab(expression(g[bark]~(mmol~m^{-2}~s^{-1}))) g4 &lt;- ggplot(ind, aes(P50leaf, gmin)) + geom_point() + ggpubr::stat_cor(aes(label = paste(..p.label..)), label.y.npc = 0.8) + ggpubr::stat_regline_equation(aes(label = paste(..adj.rr.label..))) + ylab(expression(g[min]~(mmol~m^{-2}~s^{-1}))) + ylim(0, 10) + xlab(expression(P[50~leaf]~(MPa))) (g1 + g2) / (g3 + g4) g1 &lt;- ind %&gt;% select(SSMleaf, SSMstem, SegP50) %&gt;% gather(variable, value, -SegP50) %&gt;% na.omit() %&gt;% ggplot(aes(SegP50, value, col = variable)) + geom_smooth(method = &quot;lm&quot;) + geom_point() + scale_color_manual(guide = &quot;none&quot;, values = c(&quot;darkgreen&quot;, &quot;orange&quot;)) + ggpubr::stat_cor(aes(label = paste(..p.label..)), label.y.npc = 0.7) + ggpubr::stat_regline_equation(aes(label = paste(..adj.rr.label..))) + xlab(expression(Seg[P50]~(MPa))) + ylab(expression(SSM[leaf]~or~SSM[stem]~(MPa))) g2 &lt;- ggplot(ind, aes(SegLSC, gmin)) + geom_point() + ggpubr::stat_cor(aes(label = paste(..p.label..)), label.y.npc = 0.8) + ggpubr::stat_regline_equation(aes(label = paste(..adj.rr.label..))) + ylab(expression(g[min]~(mmol~m^{-2}~s^{-1}))) + ylim(0, 10) + xlab(expression(Seg[LSC]~(10^{5}~kg~m^{-1}~Mpa^{-1}~s^{-1}))) g3 &lt;- ind %&gt;% select(gmin, gbark, `Al:As`) %&gt;% gather(variable, value, -`Al:As`) %&gt;% na.omit() %&gt;% ggplot(aes(value, `Al:As`, col = variable)) + geom_smooth(method = &quot;lm&quot;) + geom_point() + scale_color_manual(guide = &quot;none&quot;, values = c(&quot;darkgreen&quot;, &quot;orange&quot;)) + ggpubr::stat_cor(aes(label = paste(..p.label..)), label.y.npc = 0.7) + ggpubr::stat_regline_equation(aes(label = paste(..adj.rr.label..))) + ylab(&quot;Al:As&quot;) + xlab(expression(g[min]~or~g[bark]~(mmol~m^{-2}~s^{-1}))) g4 &lt;- ind %&gt;% select(P50leaf, P50stem, `Al:As`) %&gt;% gather(variable, value, -`Al:As`) %&gt;% na.omit() %&gt;% ggplot(aes(value, `Al:As`, col = variable)) + geom_point() + scale_color_manual(guide = &quot;none&quot;, values = c(&quot;darkgreen&quot;, &quot;orange&quot;)) + ggpubr::stat_cor(aes(label = paste(..p.label..)), label.y.npc = 0.7) + ggpubr::stat_regline_equation(aes(label = paste(..adj.rr.label..))) + ylab(&quot;Al:As&quot;) + xlab(expression(P[50~leaf]~or~P[50~stem]~(MPa))) (g1 + g2) / (g3 + g4) nls(PLCstem ~ SSasymp(abs(P50stem), Asym, R0, lrc), ind) %&gt;% sjPlot::tab_model()   PL Cstem Predictors Estimates CI p Asym 0.66 -4.90 – 6.23 0.813 R0 216.56 -85.63 – 518.75 0.158 lrc 0.08 -0.61 – 0.77 0.821 Observations 86 R2 0.345 lm(log(PLCstem) ~ P50stem, ind) %&gt;% sjPlot::tab_model()   log(PL Cstem) Predictors Estimates CI p (Intercept) 7.29 3.28 – 11.29 0.001 P50stem 2.61 1.66 – 3.55 &lt;0.001 Observations 86 R2 / R2 adjusted 0.262 / 0.254 nls(PLCstem ~ SSasymp(SegP50, Asym, R0, lrc), ind) %&gt;% sjPlot::tab_model()   PL Cstem Predictors Estimates CI p Asym -9.56 -39.02 – 19.89 0.517 R0 11.85 6.55 – 17.16 &lt;0.001 lrc -1.19 -2.50 – 0.13 0.076 Observations 49 R2 0.308 lm(log(PLCstem) ~ SegP50, ind) %&gt;% sjPlot::tab_model()   log(PL Cstem) Predictors Estimates CI p (Intercept) -1.68 -4.47 – 1.11 0.231 SegP50 -2.84 -4.49 – -1.19 0.001 Observations 49 R2 / R2 adjusted 0.204 / 0.187 nls(PLCstem ~ SSasymp(SSMstem, Asym, R0, lrc), ind) %&gt;% sjPlot::tab_model()   PL Cstem Predictors Estimates CI p Asym 1.28 -2.38 – 4.94 0.488 R0 29.02 23.29 – 34.75 &lt;0.001 lrc 0.26 -0.06 – 0.58 0.112 Observations 73 R2 0.603 lm(log(PLCstem) ~ SSMstem, ind) %&gt;% sjPlot::tab_model()   log(PL Cstem) Predictors Estimates CI p (Intercept) 2.51 -0.45 – 5.48 0.095 SSMstem -2.68 -3.81 – -1.56 &lt;0.001 Observations 73 R2 / R2 adjusted 0.242 / 0.231 data &lt;- ind %&gt;% select(PLCstem, P50stem, SegP50, SSMstem) %&gt;% gather(variable, value, -PLCstem) %&gt;% na.omit() %&gt;% mutate(variable_long = recode(variable, &quot;P50stem&quot; = &quot;P[50~stem]~(MPa)&quot;, &quot;SegP50&quot; = &quot;Seg[P50]~(MPa)&quot;, &quot;SSMstem&quot; = &quot;SSM[stem]~(MPa)&quot; )) ggplot(data, aes(value, PLCstem)) + geom_point() + facet_wrap(~ variable_long, scales = &quot;free&quot;, labeller = label_parsed) + ggpubr::stat_cor(aes(label = paste(..p.label..)), label.y.npc = 0.1) + ggpubr::stat_regline_equation(aes(label = paste(..adj.rr.label..)), label.y.npc = 0.2) + scale_y_log10() + xlab(&quot;&quot;) + geom_smooth(method = &quot;lm&quot;) data &lt;- ind %&gt;% select(-PLCleaf, -PLCstem, -Pmd, -Mortality, -AGR, -Genus, -Species) %&gt;% gather(variable, value, -HAND) %&gt;% na.omit() %&gt;% mutate(variable_long = recode(variable, &quot;Ptlp&quot; = &quot;P[tlp]~(MPa)&quot;, &quot;P50leaf&quot; = &quot;P[50~leaf]~(MPa)&quot;, &quot;P50stem&quot; = &quot;P[50~stem]~(MPa)&quot;, &quot;SegP50&quot; = &quot;Seg[P50]~(MPa)&quot;, &quot;SSMleaf&quot; = &quot;SSM[leaf]~(MPa)&quot;, &quot;SSMstem&quot; = &quot;SSM[stem]~(MPa)&quot;, &quot;SegLSC&quot; = &quot;Seg[LSC]~(10^{5}~kg~m^{-1}~Mpa^{-1}~s^{-1})&quot;, &quot;gmin&quot; = &quot;g[min]~(mmol~m^{-2}~s^{-1})&quot;, &quot;gbark&quot; = &quot;g[bark]~(mmol~m^{-2}~s^{-1})&quot; )) ggplot(data, aes(HAND, abs(value))) + geom_point() + facet_wrap(~ variable_long, scales = &quot;free&quot;, labeller = label_parsed) + ggpubr::stat_cor(aes(label = paste(..p.label..)), label.y.npc = 0.1) + ggpubr::stat_regline_equation(aes(label = paste(..adj.rr.label..)), formula = y ~ log(x), label.y.npc = 0.3) + scale_y_log10() + ylab(&quot;&quot;) + xlab(&quot;HAND (m)&quot;) data &lt;- ind %&gt;% select(-PLCleaf, -PLCstem, -Pmd, -HAND, -AGR, -Genus, -Species) %&gt;% gather(variable, value, -Mortality) %&gt;% na.omit() %&gt;% mutate(variable_long = recode(variable, &quot;Ptlp&quot; = &quot;P[tlp]~(MPa)&quot;, &quot;P50leaf&quot; = &quot;P[50~leaf]~(MPa)&quot;, &quot;P50stem&quot; = &quot;P[50~stem]~(MPa)&quot;, &quot;SegP50&quot; = &quot;Seg[P50]~(MPa)&quot;, &quot;SSMleaf&quot; = &quot;SSM[leaf]~(MPa)&quot;, &quot;SSMstem&quot; = &quot;SSM[stem]~(MPa)&quot;, &quot;SegLSC&quot; = &quot;Seg[LSC]~(10^{5}~kg~m^{-1}~Mpa^{-1}~s^{-1})&quot;, &quot;gmin&quot; = &quot;g[min]~(mmol~m^{-2}~s^{-1})&quot;, &quot;gbark&quot; = &quot;g[bark]~(mmol~m^{-2}~s^{-1})&quot; )) ggplot(data, aes(abs(value), Mortality)) + geom_point() + facet_wrap(~ variable_long, scales = &quot;free&quot;, labeller = label_parsed) + ggpubr::stat_cor(aes(label = paste(..p.label..)), label.y.npc = 0.75, label.x.npc = 0.5) + ggpubr::stat_regline_equation(aes(label = paste(..adj.rr.label..)), formula = y ~ log(x), label.y.npc = 0.95, label.x.npc = 0.5) + geom_smooth(method = &quot;lm&quot;, formula = y ~ log(x), data = filter(data, variable %in% c(&quot;gmin&quot;, &quot;gbark&quot;))) + ylab(expression(Mortality~(&quot;%&quot;~year^{-1}))) + xlab(&quot;&quot;) data &lt;- ind %&gt;% select(-PLCleaf, -PLCstem, -Pmd, -HAND, -Mortality, -Genus, -Species) %&gt;% gather(variable, value, -AGR) %&gt;% na.omit() %&gt;% mutate(variable_long = recode(variable, &quot;Ptlp&quot; = &quot;P[tlp]~(MPa)&quot;, &quot;P50leaf&quot; = &quot;P[50~leaf]~(MPa)&quot;, &quot;P50stem&quot; = &quot;P[50~stem]~(MPa)&quot;, &quot;SegP50&quot; = &quot;Seg[P50]~(MPa)&quot;, &quot;SSMleaf&quot; = &quot;SSM[leaf]~(MPa)&quot;, &quot;SSMstem&quot; = &quot;SSM[stem]~(MPa)&quot;, &quot;SegLSC&quot; = &quot;Seg[LSC]~(10^{5}~kg~m^{-1}~Mpa^{-1}~s^{-1})&quot;, &quot;gmin&quot; = &quot;g[min]~(mmol~m^{-2}~s^{-1})&quot;, &quot;gbark&quot; = &quot;g[bark]~(mmol~m^{-2}~s^{-1})&quot; )) ggplot(data, aes(abs(value), AGR)) + geom_point() + facet_wrap(~ variable_long, scales = &quot;free&quot;, labeller = label_parsed) + ggpubr::stat_cor(aes(label = paste(..p.label..)), label.y.npc = 0.75, label.x.npc = 0.5) + ggpubr::stat_regline_equation(aes(label = paste(..adj.rr.label..)), formula = y ~ log(x), label.y.npc = 0.95, label.x.npc = 0.5) + scale_y_log10() + ylab(expression(Annual~growth~rate~(&quot;cm&quot;~year^{-1}))) + xlab(&quot;&quot;) ind %&gt;% select(-Genus, -Species) %&gt;% cor(use = &quot;pairwise.complete.obs&quot;) %&gt;% corrplot::corrplot(type = &quot;upper&quot;, method = &quot;ellipse&quot;, col = colorRampPalette(c(&quot;blue&quot;, &quot;white&quot;,&quot;red&quot;))(100)) ind %&gt;% select(Genus, Species, HAND) %&gt;% group_by(Genus, Species) %&gt;% mutate(Hmed = median(HAND)) %&gt;% arrange(Hmed) %&gt;% mutate(type = &quot;Terra firme&quot;) %&gt;% mutate(type = ifelse(Species %in% c(&quot;bidentata&quot;, &quot;rosea&quot;, &quot;globulifera&quot;, &quot;melinonii&quot;), &quot;Generalist&quot;, type)) %&gt;% mutate(type = ifelse(Species %in% c(&quot;falcata&quot;, &quot;glabra&quot;, &quot;hexapetala&quot;, &quot;persistens&quot;, &quot;opacum&quot;), &quot;Bottomland&quot;, type)) %&gt;% ggplot(aes(reorder(paste(Genus, Species), Hmed), HAND, col = type)) + geom_boxplot() + coord_flip() + xlab(&quot;&quot;) + ylab(&quot;HAND (m)&quot;) + theme(axis.text.y = element_text(face = &quot;italic&quot;)) + scale_color_manual(guide = &quot;none&quot;, values = c(&quot;green&quot;, &quot;orange&quot;, &quot;firebrick&quot;)) "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
