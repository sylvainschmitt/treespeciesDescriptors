```{r setupperf, include=FALSE, eval=T}
rm(list = ls()) ; invisible(gc()) ; set.seed(42)
library(knitr)
library(tidyverse)
library(sf)
ggplot2::theme_set(bayesplot::theme_default())
readshp <- function(path){
  shp <- st_read(path, crs = '+proj=utm +zone=22 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0')
  shp$geometry <- lwgeom::lwgeom_make_valid(st_as_sfc(shp))
  return(shp)
}
```

# Performance

## Growth

```{r growthdata, eval=F}
paracou <- vroom::vroom("data/paracou.tsv") %>% 
  filter(BotaSource == "Bota") %>% 
  filter(!is.na(Xutm), !is.na(Yutm))
paracouXY <- paracou %>% 
  st_as_sf(coords = c("Xutm", "Yutm"),
           crs = '+proj=utm +zone=22 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0')
paracou <- left_join(paracou,
          st_intersection(readshp("data/TopographicLevels/TopographicLevels.shp"), paracouXY) %>% 
            st_drop_geometry() %>% 
            select(idTree, TypeTopoEN))
paracou %>% 
  group_by(TypeTopoEN, Genus, Species, idTree) %>% 
  arrange(CensusYear) %>% 
  mutate(FirstDead = first(CensusYear[CodeAlive == 0])) %>% 
  mutate(FirstDead = ifelse(is.na(FirstDead), max(CensusYear)+1, FirstDead)) %>% 
  filter(CensusYear < FirstDead) %>% 
  summarise(AGR = (last(DBH) - first(DBH))/(last(CensusYear) - first(CensusYear))) %>% 
  na.omit() %>% 
  group_by(TypeTopoEN, Genus, Species) %>% 
  summarise(AGR = median(AGR)) %>% 
  pivot_wider(names_from = TypeTopoEN, values_from = AGR) %>% 
  vroom::vroom_write("data/species_growth.tsv")
```

```{r growthtab}
#| message: false
vroom::vroom("data/species_growth.tsv") %>% 
  kable(caption = "Median of annual growth rate of all individuals across species (cm/year).")  
```

```{r}
#| message: false
#| warning: false
vroom::vroom("data/species_growth.tsv") %>% 
  gather(habitat, AGR, -Genus, -Species, -Plateau) %>% 
    ggplot(aes(Plateau, AGR, 
             label = paste0(str_sub(Genus, 1, 1), ". ", Species))) +
  geom_smooth(method = "lm") +
  geom_point() +
  facet_wrap(~ habitat) +
  ggpubr::stat_cor() +
  xlab("AGR in Planteau") +
  ylab("AGR in other habitats") +
  ggrepel::geom_text_repel()
```

## Mortality

```{r mortalitydata, eval=F}
paracou <- vroom::vroom("data/paracou.tsv") %>% 
  filter(BotaSource == "Bota") %>% 
  filter(!is.na(Xutm), !is.na(Yutm))
paracouXY <- paracou %>% 
  st_as_sf(coords = c("Xutm", "Yutm"),
           crs = '+proj=utm +zone=22 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0')
paracou <- left_join(paracou,
          st_intersection(readshp("data/TopographicLevels/TopographicLevels.shp"), paracouXY) %>% 
            st_drop_geometry() %>% 
            select(idTree, TypeTopoEN))
paracou %>% 
  group_by(TypeTopoEN, Genus, Species, idTree) %>% 
  summarise(death = ifelse(any(CodeAlive == 0), 1, 0),
            y_min = min(CensusYear),
            y_max = max(CensusYear)) %>% 
  group_by(TypeTopoEN, Genus, Species) %>% 
  summarise(mortality = sum(death) / n() / (max(y_max) - min(y_min)) * 100) %>% 
  pivot_wider(names_from = TypeTopoEN, values_from = mortality) %>% 
  vroom::vroom_write("data/species_mortality.tsv")
```

```{r mortalitytab}
#| message: false
vroom::vroom("data/species_mortality.tsv") %>% 
  select(-"NA") %>% 
  kable(caption = "Annual mortality rate across species (%/year).") 
```

```{r}
#| message: false
#| warning: false
vroom::vroom("data/species_mortality.tsv") %>% 
  select(-"NA") %>% 
  gather(habitat, mortality, -Genus, -Species, -Plateau) %>% 
  ggplot(aes(Plateau, mortality, 
             label = paste0(str_sub(Genus, 1, 1), ". ", Species))) +
  geom_smooth(method = "lm") +
  geom_point() +
  facet_wrap(~ habitat) +
  ggpubr::stat_cor() +
  xlab("mortality in Planteau") +
  ylab("mortality in other habitats") +
  ggrepel::geom_text_repel()
```

## Treefall

```{r treefalldata, eval=F}
paracou0 <- vroom::vroom("data/paracou.tsv") %>% 
  filter(BotaSource == "Bota") %>% 
  filter(!is.na(Xutm), !is.na(Yutm))
paracouXY <- paracou0 %>% 
  st_as_sf(coords = c("Xutm", "Yutm"),
           crs = '+proj=utm +zone=22 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0')
paracou <- left_join(paracou0,
          st_intersection(st_read("data/TopographicLevels/TopographicLevels.shp"), paracouXY) %>% 
            st_drop_geometry() %>% 
            select(idTree, TypeTopoEN)) %>% 
  bind_rows(paracou0 %>% mutate(TypeTopoEN = "All"))
paracou %>% 
  group_by(TypeTopoEN, Genus, Species, idTree) %>% 
  summarise(death = ifelse(any(MeasCode %in% 6:7), 1, 0),
            y_min = min(CensusYear),
            y_max = max(CensusYear)) %>% 
  group_by(TypeTopoEN, Genus, Species) %>% 
  summarise(mortality = sum(death) / n() / (max(y_max) - min(y_min)) * 100) %>% 
  na.omit() %>% 
  pivot_wider(names_from = TypeTopoEN, values_from = mortality) %>% 
  vroom::vroom_write("data/species_treefall.tsv")
```

```{r treefalltab}
#| message: false
vroom::vroom("data/species_treefall.tsv") %>% 
  kable(caption = "Annual treefall rate across species (%/year).") 
```

```{r}
#| message: false
#| warning: false
vroom::vroom("data/species_treefall.tsv") %>% 
  gather(habitat, mortality, -Genus, -Species, -Plateau) %>% 
  ggplot(aes(Plateau, mortality, 
             label = paste0(str_sub(Genus, 1, 1), ". ", Species))) +
  geom_smooth(method = "lm") +
  geom_point() +
  facet_wrap(~ habitat) +
  ggpubr::stat_cor() +
  xlab("treefall in Planteau") +
  ylab("treefall in other habitats") +
  ggrepel::geom_text_repel()
```

## Dead standing

```{r deadstandingdata, eval=F}
paracou0 <- vroom::vroom("data/paracou.tsv") %>% 
  filter(BotaSource == "Bota") %>% 
  filter(!is.na(Xutm), !is.na(Yutm))
paracouXY <- paracou0 %>% 
  st_as_sf(coords = c("Xutm", "Yutm"),
           crs = '+proj=utm +zone=22 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0')
paracou <- left_join(paracou0,
          st_intersection(st_read("data/TopographicLevels/TopographicLevels.shp"), paracouXY) %>% 
            st_drop_geometry() %>% 
            select(idTree, TypeTopoEN)) %>% 
  bind_rows(paracou0 %>% mutate(TypeTopoEN = "All"))
paracou %>% 
  group_by(TypeTopoEN, Genus, Species, idTree) %>% 
  summarise(death = ifelse(any(MeasCode == 0 & CodeAlive == 0), 1, 0),
            y_min = min(CensusYear),
            y_max = max(CensusYear)) %>% 
  group_by(TypeTopoEN, Genus, Species) %>% 
  summarise(mortality = sum(death) / n() / (max(y_max) - min(y_min)) * 100) %>% 
  na.omit() %>% 
  pivot_wider(names_from = TypeTopoEN, values_from = mortality) %>% 
  vroom::vroom_write("data/species_deadstanding.tsv")
```

```{r deadstandingtab}
#| message: false
vroom::vroom("data/species_deadstanding.tsv") %>% 
  kable(caption = "Annual dead standing rate across species (%/year).") 
```

```{r}
#| message: false
#| warning: false
vroom::vroom("data/species_deadstanding.tsv") %>% 
  gather(habitat, mortality, -Genus, -Species, -Plateau) %>% 
  ggplot(aes(Plateau, mortality, 
             label = paste0(str_sub(Genus, 1, 1), ". ", Species))) +
  geom_smooth(method = "lm") +
  geom_point() +
  facet_wrap(~ habitat) +
  ggpubr::stat_cor() +
  xlab("dead standing in Planteau") +
  ylab("dead standing in other habitats") +
  ggrepel::geom_text_repel()
```
